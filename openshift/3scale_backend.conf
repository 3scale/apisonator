#!/usr/bin/env ruby

def parse_int_env(env_name)
  env_var = ENV[env_name]
  !env_var.nil? && !env_var.empty? ? env_var.to_i : nil
end

# Returns the request loggers as an array of symbols.
# For example: [:text, :json]
def parse_request_loggers
  Array(ENV['CONFIG_REQUEST_LOGGERS']).flat_map do |s|
    s.split(',').map(&:strip).reject(&:empty?).uniq.map(&:to_sym)
  end
end

ThreeScale::Backend.configure do |config|
  config.saas = ENV['CONFIG_SAAS'].to_s == 'true' ? true : false
  config.internal_api.user = "#{ENV['CONFIG_INTERNAL_API_USER']}"
  config.internal_api.password = "#{ENV['CONFIG_INTERNAL_API_PASSWORD']}"
  config.queues.master_name = "#{ENV['CONFIG_QUEUES_MASTER_NAME']}"
  config.queues.sentinels = ENV.fetch('SENTINEL_HOSTS', '').split(/\s*,\s*/).map{ |url| url.split(':') }.map { |(host, port)| { host: host, port: port } }
  config.queues.connect_timeout = parse_int_env('CONFIG_QUEUES_CONNECT_TIMEOUT')
  config.queues.read_timeout = parse_int_env('CONFIG_QUEUES_READ_TIMEOUT')
  config.queues.write_timeout = parse_int_env('CONFIG_QUEUES_WRITE_TIMEOUT')
  config.redis.proxy = "#{ENV['CONFIG_REDIS_PROXY']}"
  config.redis.connect_timeout = parse_int_env('CONFIG_REDIS_CONNECT_TIMEOUT')
  config.redis.read_timeout = parse_int_env('CONFIG_REDIS_READ_TIMEOUT')
  config.redis.write_timeout = parse_int_env('CONFIG_REDIS_WRITE_TIMEOUT')
  config.aws_access_key_id = "#{ENV['CONFIG_AWS_ACCESS_KEY_ID']}"
  config.aws_secret_access_key = "#{ENV['CONFIG_AWS_SECRET_ACCESS_KEY']}"
  config.kinesis_stream_name = "#{ENV['CONFIG_KINESIS_STREAM_NAME']}"
  config.kinesis_region = "#{ENV['CONFIG_KINESIS_REGION']}"
  config.stats.bucket_size = ENV['CONFIG_STATS_BUCKET_SIZE'].to_i
  config.notification_batch = ENV['CONFIG_NOTIFICATION_BATCH'].to_i
  config.log_path = "#{ENV['CONFIG_LOG_PATH']}"
  config.can_create_event_buckets = ENV['CONFIG_CAN_CREATE_EVENT_BUCKETS'].to_s == 'true' ? true : false
  config.redshift.host = "#{ENV['CONFIG_REDSHIFT_HOST']}"
  config.redshift.port = ENV['CONFIG_REDSHIFT_PORT']
  config.redshift.dbname = "#{ENV['CONFIG_REDSHIFT_DBNAME']}"
  config.redshift.user = "#{ENV['CONFIG_REDSHIFT_USER']}"
  config.redshift.password = "#{ENV['CONFIG_REDSHIFT_PASSWORD']}"
  config.master_service_id = "#{ENV['CONFIG_MASTER_SERVICE_ID']}"
  config.hoptoad.api_key = "#{ENV['CONFIG_HOPTOAD_API_KEY']}"
  config.events_hook = "#{ENV['CONFIG_EVENTS_HOOK']}"
  config.events_hook_shared_secret = "#{ENV['CONFIG_EVENTS_HOOK_SHARED_SECRET']}"
  config.workers_log_file = "#{ENV['CONFIG_WORKERS_LOG_FILE']}"
  config.oauth.max_token_size = parse_int_env('CONFIG_OAUTH_MAX_TOKEN_SIZE')
  config.request_loggers = parse_request_loggers
end
