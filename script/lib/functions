REDIS_PORTS=(7379 7380 6379)
REDIS_TLS_PORT=46379
ALL_PORTS=(${REDIS_PORTS[@]} $REDIS_TLS_PORT)
REDIS_UNIX_SOCKET_PREFIX="/tmp/redis_unix"
TWEMPROXY_PIDFILE="/tmp/twemproxy_backend_tests.pid"

# helper for daemonizing processes from the shell
function daemonize {
    (nohup "$@" 0<&- &> /dev/null & echo $!) &
}

function kill_pidfile {
    local file="$1"
    kill_pid `cat "${file}"`
    rm -f "${file}"
}

function kill_pid {
    kill -TERM "${1}" 2> /dev/null & sleep 2
    kill -9 "${1}" 2> /dev/null
}

function start_redis {
    local basedir="${SCRIPT_DIR:-$(pwd -P)}"

    if [ -e /usr/local/bin/redis-server ]; then
	cmd="/usr/local/bin/redis-server"
    elif [ -e /usr/bin/redis-server ]; then
	cmd="/usr/bin/redis-server"
    else
	cmd="/opt/redis/bin/redis-server"
    fi
     for port in "${REDIS_PORTS[@]}"
    do
        $cmd --port "$port" --unixsocket "${REDIS_UNIX_SOCKET_PREFIX}.$port.sock" --unixsocketperm 775 --logfile "/tmp/redis.$port.log" --daemonize yes --aclfile ${basedir}/config/redis-server-acl.conf
    done

    $cmd --tls-port "$REDIS_TLS_PORT" --port 0 --unixsocket "${REDIS_UNIX_SOCKET_PREFIX}.$REDIS_TLS_PORT.sock" \
        --unixsocketperm 775 --logfile "/tmp/redis.$REDIS_TLS_PORT.log" --daemonize yes \
        --tls-cert-file ${basedir}/config/redis-server.crt --tls-key-file ${basedir}/config/redis-server.key \
        --tls-ca-cert-file ${basedir}/config/ca-root-cert.pem --tls-auth-clients optional \
        --aclfile ${basedir}/config/redis-server-acl.conf
}

function stop_redis {
    local pids
    for port in "${ALL_PORTS[@]}"; do
	kill_pid `ps aux | grep redis-server | grep "$port" | awk '{ print $2 }'` &
	pids[${port}]=$!
    done
    wait ${pids[*]}
}

function start_twemproxy {
    local basedir="${SCRIPT_DIR:-$(pwd -P)}"

    local configdir
    if [ -r ${basedir}/config/twemproxy.yml ]; then
        configdir="${basedir}/config"
    else
        configdir="${basedir}/script/config"
    fi

    /opt/twemproxy/sbin/nutcracker -m 512 -o /tmp/nutcracker-$(date +"%Y%m%d%H%M%S").log -p "${TWEMPROXY_PIDFILE}" -d -c ${configdir}/twemproxy.yml
}

function stop_twemproxy {
    kill_pidfile ${TWEMPROXY_PIDFILE}
}

function start_services {
    start_redis
    start_twemproxy
}

function stop_services {
    local pids
    for fn in stop_redis stop_twemproxy; do
	eval "${fn}" &
	pids[${fn}]=$!
    done
    wait ${pids[*]}
}

bundle_cmd() {
  local version="${1:-}"
  local version_spec="${version:+_${version}_}"
  echo "bundle ${version_spec}"
}

bundled_with() {
  local lockfile="${1:-${BUNDLE_GEMFILE:-Gemfile}.lock}"
  cat ${lockfile} | grep -A 1 "^BUNDLED WITH$" | tail -n 1 | sed -e 's/\s//g'
}

bundle_exec() {
  $(bundle_cmd $(bundled_with)) exec "$@"
}
